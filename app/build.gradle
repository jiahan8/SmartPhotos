plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.jiahan.smartcamera"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }

    // Do NOT compress tflite model files (need to call out to developers!)
    aaptOptions {
        noCompress "tflite"
    }
    
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


//    def camerax_version = '1.0.0-SNAPSHOT'
//    implementation "androidx.camera:camera-core:${camerax_version}"
//    implementation "androidx.camera:camera-camera2:${camerax_version}"
//    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
//    implementation "androidx.camera:camera-view:${camerax_version}"

    // CameraX
//    implementation "androidx.camera:camera-camera2:1.0.0-SNAPSHOT"
//    implementation "androidx.camera:camera-lifecycle:1.0.0-SNAPSHOT"
//    implementation "androidx.camera:camera-view:1.0.0-SNAPSHOT"
//    implementation "androidx.camera:camera-core:1.0.0-alpha02"

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.0.0-beta12"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha19"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha19"

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.google.guava:guava:17.0'

    // room
    def room_version = "2.3.0-alpha03"
//    implementation "androidx.room:room-runtime:$room_version"
//    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:2.3.0-alpha03"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-testing:$room_version"

    // rx
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'com.facebook.fresco:fresco:2.3.0'

    // lifecycle
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
//    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:26.1.1')

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
    implementation 'com.google.firebase:firebase-storage:19.2.0'


    // Barcode model
    implementation 'com.google.mlkit:barcode-scanning:16.1.0'
    // Or comment the dependency above and uncomment the dependency below to
    // use unbundled model that depends on Google Play Services
    // implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:16.1.3'

    // Object detection feature with bundled default classifier
    implementation 'com.google.mlkit:object-detection:16.2.2'

    // Object detection feature with custom classifier support
    implementation 'com.google.mlkit:object-detection-custom:16.3.0'

    // Face features
    implementation 'com.google.mlkit:face-detection:16.0.3'
    // Or comment the dependency above and uncomment the dependency below to
    // use unbundled model that depends on Google Play Services
    // implementation 'com.google.android.gms:play-services-mlkit-face-detection:16.1.2'

    // Text features
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:16.1.2'

    // Image labeling
    implementation 'com.google.mlkit:image-labeling:17.0.1'
    // Or comment the dependency above and uncomment the dependency below to
    // use unbundled model that depends on Google Play Services
    // implementation 'com.google.android.gms:play-services-mlkit-image-labeling:16.0.1'

    // Image labeling custom
    implementation 'com.google.mlkit:image-labeling-custom:16.3.0'

    // Pose detection with default models
    implementation 'com.google.mlkit:pose-detection:17.0.1-beta1'
    // Pose detection with accurate models
    implementation 'com.google.mlkit:pose-detection-accurate:17.0.1-beta1'


    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'


}

configurations {
    // Resolves dependency conflict caused by some dependencies use
    // com.google.guava:guava and com.google.guava:listenablefuture together.
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
