package com.jiahan.smartcamera.database.dao

import androidx.room.Dao
import androidx.room.Insert
import androidx.room.OnConflictStrategy
import androidx.room.Query
import com.jiahan.smartcamera.database.data.DatabasePhoto
import kotlinx.coroutines.flow.Flow

@Dao
interface PhotoDao {

    @Query("select * from photos order by save_date desc")
    fun getPhotos(): Flow<List<DatabasePhoto>>

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    suspend fun insertPhotos(vararg photos: DatabasePhoto)

    @Query("select * from photos where id = :imageId")
    suspend fun getImageById(imageId: Int): DatabasePhoto?

    @Query("delete from photos where id = :imageId")
    suspend fun deleteImage(imageId: Int)

    @Query("select * from photos where original_name = :name LIMIT 1")
    suspend fun getPhotoByPath(name: String): DatabasePhoto?

    @Query("select * from photos where title like '%' || :query || '%' order by save_date desc")
    fun searchPhotos(query: String): Flow<List<DatabasePhoto>>

    @Query("delete from photos")
    suspend fun deletePhotos()

    /**
     * So that autogenerated key for DatabasePhoto table will start from 1
     */
    @Query("delete from sqlite_sequence where name='photos'")
    suspend fun deleteSequence()
}